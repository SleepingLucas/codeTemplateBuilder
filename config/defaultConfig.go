package config

var defaultConfig = Config{
	Templates: Templates{
		Codeforces: Template{
			Code: []string{
				`package main`,
				``,
				`import (`,
				`	"bufio"`,
				`	. "fmt"`,
				`	"io"`,
				`	"os"`,
				`)`,
				``,
				`func cf{{ .dqid }}(in io.Reader, _w io.Writer) {`,
				`	out := bufio.NewWriter(_w)`,
				`	defer out.Flush()`,
				`	`,
				`}`,
				``,
				`func main() { cf{{ .dqid }}(bufio.NewReader(os.Stdin), os.Stdout) }`,
			},
			Test: []string{
				`// Generated by copypasta/template/generator_test.go`,
				`package main`,
				``,
				`import (`,
				`	"testing"`,
				``,
				`	"github.com/EndlessCheng/codeforces-go/main/testutil"`,
				`)`,
				``,
				`func Test_cf{{ .dqid }}(t *testing.T) {`,
				`	testCases := [][2]string{`,
				`{{ .dexample }}`,
				`	}`,
				`	testutil.AssertEqualStringCase(t, testCases, 0, cf{{ .dqid }})`,
				`}`,
			},
		},
	},
}

// WriteDefaultConfig 写入默认配置
func WriteDefaultConfig(configFilePath string) {
	// 写入默认配置
	err := OverrideConfig(configFilePath, defaultConfig)
	if err != nil {
		panic(err)
	}
}
